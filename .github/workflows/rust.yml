name: Build, Test, Upload

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Install protoc (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          PROTOC_VERSION=$(curl -s "https://api.github.com/repos/protocolbuffers/protobuf/releases/latest" | grep -Po '"tag_name": "v\K[0-9.]+')
          curl -Lo protoc.zip "https://github.com/protocolbuffers/protobuf/releases/latest/download/protoc-${PROTOC_VERSION}-linux-x86_64.zip"
          sudo unzip -q protoc.zip bin/protoc -d /usr/local
          sudo chmod a+x /usr/local/bin/protoc
          protoc --version
          rm -rf protoc.zip
      - name: Install protoc (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install protobuf
      - name: Build Binary
        run: |
          cargo build --release
      - name: Package for ${{ matrix.os }}
        uses: actions/upload-artifact@v3
        with:
          name: etxdb-${{ matrix.os }}
          path: target/release/etxdb
          retention-days: 15
          if-no-files-found: error

  deploy:
    name: Deploy release
    runs-on: ubuntu-latest
    needs: build
    permissions: write-all
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Compose release filename
        run: echo "release_filename=etxdb-${GITHUB_SHA::8}.zip" >> $GITHUB_ENV

      - name: Deploy release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: 'nightly'
          prerelease: true
          files: artifacts/*